{"version":3,"file":"component---src-pages-index-js-223bd82b992dcc4c478c.js","mappings":"2OAkBA,EAde,SAACA,GAAS,IAAD,EAChBC,EAAOC,KAAKC,MAAMD,KAAKE,UAASJ,MAAAA,GAAd,UAAcA,EAAOA,aAArB,aAAc,EAAcK,SAC9CC,EAASN,MAAAA,OAAH,EAAGA,EAAOA,MAAMC,GAC1B,OACI,2BACA,gBAAC,EAAAM,KAAD,CAAMC,GAAIF,EAAOG,OAAOC,MACpB,gBAAC,EAAAC,EAAD,CAAaC,IAAI,wBACJC,MAAO,GACPC,IAAI,WAFjB,yBCyDZ,EA3DkB,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBC,QAAxB,QACZpB,EAAQe,EAAKM,kBAAkBC,MAErC,OAAqB,IAAjBtB,EAAMK,OAEN,gBAAC,IAAD,CAAQW,SAAUA,EAAUI,MAAOH,GACjC,gBAAC,IAAD,CAAKG,MAAM,cACX,gBAAC,IAAD,MACA,uLAUJ,gBAAC,IAAD,CAAQJ,SAAUA,EAAUI,MAAOH,GACjC,gBAAC,IAAD,CAAKG,MAAM,cACX,gBAAC,IAAD,MACA,gBAAC,EAAD,CAAQpB,MAAOA,IACf,sBAAIuB,MAAO,CAAEC,UAAU,SACpBxB,EAAMyB,KAAI,SAAAC,GACT,IAAMN,EAAQM,EAAKC,YAAYP,OAASM,EAAKjB,OAAOC,KAEpD,OACE,sBAAIkB,IAAKF,EAAKjB,OAAOC,MACnB,2BACEmB,UAAU,iBACVC,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAxB,KAAD,CAAMC,GAAIkB,EAAKjB,OAAOC,KAAMsB,SAAS,OACnC,wBAAMA,SAAS,YAAYZ,KAG/B,6BAAQM,EAAKC,YAAYM,OAE3B,+BACE,qBACEC,wBAAyB,CACvBC,OAAQT,EAAKC,YAAYS,aAAeV,EAAKW,SAE/CL,SAAS,0B","sources":["webpack://gatsby-starter-blog/./src/components/Random.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["import {StaticImage} from \"gatsby-plugin-image\";\nimport {Link} from \"gatsby\";\nimport * as React from \"react\"\n\nconst Random = (posts)=>{\n    var rand = Math.floor(Math.random()*posts?.posts?.length);\n    var rValue = posts?.posts[rand];\n    return (\n        <div>\n        <Link to={rValue.fields.slug}>\n            <StaticImage src=\"../images/twitter.png\"\n                         width={30}\n                         alt=\"git icon\"/>\n        </Link>\n        </div>\n    )\n}\n\nexport default Random;","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Random from \"../components/Random\";\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"All posts\" />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"All posts\" />\n      <Bio />\n      <Random posts={posts}/>\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["posts","rand","Math","floor","random","length","rValue","Link","to","fields","slug","S","src","width","alt","data","location","siteTitle","site","siteMetadata","title","allMarkdownRemark","nodes","style","listStyle","map","post","frontmatter","key","className","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt"],"sourceRoot":""}